apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka-android'

ext {
    artifact = 'libdepaums'
    group = 'eu.depau.etchdroid'
    libraryVersion = '0.6'
    publishedGroupId = 'eu.depau.etchdroid'
    libraryName = 'libdepaums'
    libraryDescription = 'Android USB mass storage library with FAT32 support, forked from libaums'
    siteUrl = 'https://github.com/EtchDroid/libdepaums'
    gitUrl = 'https://github.com/EtchDroid/libdepaums.git'
    developerId = 'Depau'
    developerName = 'Davide Depau'
    developerEmail = 'davide@depau.eu'
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.apache.commons:commons-io:1.3.2'
    testImplementation 'com.eclipsesource.minimal-json:minimal-json:0.9.4'
    testImplementation 'org.xenei:junit-contracts:0.1.7'
    testImplementation 'org.mockito:mockito-core:2.7.22'
    testImplementation 'net.bytebuddy:byte-buddy:1.6.11'
    testImplementation 'org.objenesis:objenesis:2.6'

    api 'com.android.support:support-annotations:28.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

repositories {
    mavenCentral()
}

dokka {
    moduleName = 'libdepaums'
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"

    // List of files with module and package documentation
    // http://kotlinlang.org/docs/reference/kotlin-doc.html#module-and-package-documentation
    includes = ['README.md']

    // Use to include or exclude non public members.
    includeNonPublic = false

    // Do not output deprecated members. Applies globally, can be overridden by packageOptions
    skipDeprecated = true

    // Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions
    reportUndocumented = true

    skipEmptyPackages = true // Do not create index pages for empty packages
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from "$buildDir/javadoc"
    archiveName = "javadoc.jar"
}

artifacts {
    archives javadocJar
}
